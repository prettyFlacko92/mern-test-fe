{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","shared/hooks/auth-hook.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","React","createElement","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","MainHeader","children","NavLinks","auth","useContext","NavLink","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","drawerIsOpen","setDrawerIsOpen","useState","closeDrawerHandler","Fragment","openDrawerHandler","Link","logoutTimer","Users","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","useAuth","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","routes","Switch","Route","path","Redirect","Provider","value","Router","Suspense","fallback","render"],"mappings":"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","file":"static/js/main.2aebb101.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {},\n});\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { AuthContext } from \"../../context/auth-context\";\nimport \"./NavLinks.css\";\n\nconst NavLinks = (props) => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import { useEffect, useState, useCallback } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token,\r\n        expiration: tokenExpirationDate.toISOString(),\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime =\r\n        tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expiration)\r\n      );\r\n    }\r\n  }, [login]);\r\n\r\n  return {\r\n    token,\r\n    userId,\r\n    login,\r\n    logout,\r\n  };\r\n};\r\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\n// import Users from \"./user/pages/Users\";\n// import NewPlace from \"./places/pages/NewPlace\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\n// import Auth from \"./user/pages/Auth\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\n\nconst Users = React.lazy(() => import(\"./user/pages/Users\"));\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./user/pages/Auth\"));\n\nconst App = () => {\n  const { token, userId, login, logout } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}