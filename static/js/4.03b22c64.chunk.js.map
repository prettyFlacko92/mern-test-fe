{"version":3,"sources":["shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js"],"names":["Button","props","href","React","createElement","className","size","inverse","danger","children","to","Link","exact","type","onClick","disabled","ErrorModal","Modal","onCancel","onClear","header","show","error","footer","ModalOverlay","content","style","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Fragment","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","isLoading","setIsLoading","useState","setError","activeHttpRequests","useRef","sendRequest","useCallback","async","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","useEffect","forEach","abortCtrl","abort","clearError","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","inputState","dispatch","useReducer","initialValue","initialValid","id","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","src","alt","pickImageHandler","click","NewPlace","auth","useContext","AuthContext","inputHandler","title","description","address","image","history","useHistory","LoadingSpinner","asOverlay","formData","FormData","append","userId","Authorization","token"],"mappings":"qGAAA,iCA0CeA,IArCAC,GACTA,EAAMC,KAENC,IAAAC,cAAA,KACEC,UAAW,kBAAkBJ,EAAMK,MAAQ,aAAaL,EAAMM,SAC5D,qBAAqBN,EAAMO,QAAU,mBACvCN,KAAMD,EAAMC,MAEXD,EAAMQ,UAITR,EAAMS,GAENP,IAAAC,cAACO,IAAI,CACHD,GAAIT,EAAMS,GACVE,MAAOX,EAAMW,MACbP,UAAW,kBAAkBJ,EAAMK,MAAQ,aAAaL,EAAMM,SAC5D,qBAAqBN,EAAMO,QAAU,oBAEtCP,EAAMQ,UAKXN,IAAAC,cAAA,UACEC,UAAW,kBAAkBJ,EAAMK,MAAQ,aAAaL,EAAMM,SAC5D,qBAAqBN,EAAMO,QAAU,mBACvCK,KAAMZ,EAAMY,KACZC,QAASb,EAAMa,QACfC,SAAUd,EAAMc,UAEfd,EAAMQ,W,gCCrCb,oCAkBeO,IAbKf,GAEhBE,IAAAC,cAACa,IAAK,CACJC,SAAUjB,EAAMkB,QAChBC,OAAO,qBACPC,OAAQpB,EAAMqB,MACdC,OAAQpB,IAAAC,cAACJ,IAAM,CAACc,QAASb,EAAMkB,SAAS,SAExChB,IAAAC,cAAA,SAAIH,EAAMqB,S,gCCbhB,0DAOA,MAAME,EAAevB,IACnB,MAAMwB,EACJtB,IAAAC,cAAA,OAAKC,UAAW,SAASJ,EAAMI,UAAaqB,MAAOzB,EAAMyB,OACvDvB,IAAAC,cAAA,UAAQC,UAAW,iBAAiBJ,EAAM0B,aACxCxB,IAAAC,cAAA,UAAKH,EAAMmB,SAEbjB,IAAAC,cAAA,QACEwB,SACE3B,EAAM2B,SAAW3B,EAAM2B,SAAWC,GAASA,EAAMC,kBAGnD3B,IAAAC,cAAA,OAAKC,UAAW,kBAAkBJ,EAAM8B,cACrC9B,EAAMQ,UAETN,IAAAC,cAAA,UAAQC,UAAW,iBAAiBJ,EAAM+B,aACvC/B,EAAMsB,UAKf,OAAOU,IAASC,aAAaT,EAASU,SAASC,eAAe,gBAoBjDnB,IAjBDhB,GAEVE,IAAAC,cAACD,IAAMkC,SAAQ,KACZpC,EAAMoB,MAAQlB,IAAAC,cAACkC,IAAQ,CAACxB,QAASb,EAAMiB,WACxCf,IAAAC,cAACmC,IAAa,CACZC,GAAIvC,EAAMoB,KACVoB,cAAY,EACZC,eAAa,EACbC,QAAS,IACTC,WAAW,SAEXzC,IAAAC,cAACoB,EAAiBvB,M,gCCzC1B,6CAEO,MAAM4C,EAAgBA,KAC3B,MAAOC,EAAWC,GAAgBC,oBAAS,IACpC1B,EAAO2B,GAAYD,qBAEpBE,EAAqBC,iBAAO,IAE5BC,EAAcC,uBAClBC,eAAOC,GAAoD,IAA/CC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,MAAOG,EAAIH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAMI,EAAOJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACjDV,GAAa,GACb,MAAMe,EAAgB,IAAIC,gBAC1Bb,EAAmBc,QAAQC,KAAKH,GAEhC,IACE,MAAMI,QAAiBC,MAAMZ,EAAK,CAChCC,SACAI,OACAC,UACAO,OAAQN,EAAcM,SAGlBC,QAAqBH,EAASI,OAMpC,GAJApB,EAAmBc,QAAUd,EAAmBc,QAAQO,OACtDC,GAAWA,IAAYV,IAGpBI,EAASO,GACZ,MAAM,IAAIC,MAAML,EAAaM,SAI/B,OADA5B,GAAa,GACNsB,EACP,MAAOO,GAGP,MAFA3B,EAAS2B,EAAID,SACb5B,GAAa,GACP6B,KAGV,IAcF,OAPAC,oBAAU,IACD,KAEL3B,EAAmBc,QAAQc,QAAQC,GAAaA,EAAUC,UAE3D,IAEI,CAAElC,YAAWxB,QAAO8B,cAAa6B,WAXrBA,KACjBhC,EAAS,U,0EC5Cb,8IAQaiC,EAAoBA,KAAA,CAASrE,KARX,YAUlBsE,EAAsBC,IAAG,CACpCvE,KAV+B,YAW/BuE,IAAKA,IAQMC,EAAkBA,KAAA,CAASxE,KAfX,UAiBhByE,EAAWA,CAACC,EAAOC,KAC9B,IAAIC,GAAU,EACd,IAAK,MAAMC,KAAaF,EAxBK,YAyBvBE,EAAU7E,OACZ4E,EAAUA,GAAWF,EAAMI,OAAOjC,OAAS,GAzBhB,cA2BzBgC,EAAU7E,OACZ4E,EAAUA,GAAWF,EAAMI,OAAOjC,QAAUgC,EAAUN,KA3B3B,cA6BzBM,EAAU7E,OACZ4E,EAAUA,GAAWF,EAAMI,OAAOjC,QAAUgC,EAAUN,KA7BjC,QA+BnBM,EAAU7E,OACZ4E,EAAUA,IAAYF,GAASG,EAAUN,KA/BpB,QAiCnBM,EAAU7E,OACZ4E,EAAUA,IAAYF,GAASG,EAAUN,KAjClB,UAmCrBM,EAAU7E,OACZ4E,EAAUA,GAAW,iBAAiBG,KAAKL,IAG/C,OAAOE,I,gCC5CT,kCAKA,MAAMI,EAAeA,CAACC,EAAOC,KAC3B,OAAQA,EAAOlF,MACb,IAAK,SACH,MAAO,IACFiF,EACHP,MAAOQ,EAAOX,IACdK,QAASH,YAASS,EAAOX,IAAKW,EAAOP,aAEzC,IAAK,QACH,MAAO,IACFM,EACHE,WAAW,GAGf,QACE,OAAOF,IAgEEG,IA5DDhG,IACZ,MAAOiG,EAAYC,GAAYC,qBAAWP,EAAc,CACtDN,MAAOtF,EAAMoG,cAAgB,GAC7BL,WAAW,EACXP,QAASxF,EAAMqG,eAAgB,KAG3B,GAAEC,EAAE,QAAEC,GAAYvG,GAClB,MAAEsF,EAAK,QAAEE,GAAYS,EAE3BrB,oBAAU,KACR2B,EAAQD,EAAIhB,EAAOE,IAClB,CAACc,EAAIhB,EAAOE,EAASe,IAExB,MAAMC,EAAgB5E,IACpBsE,EAAS,CACPtF,KAAM,SACNuE,IAAKvD,EAAM6E,OAAOnB,MAClBC,WAAYvF,EAAMuF,cAIhBmB,EAAeA,KACnBR,EAAS,CACPtF,KAAM,WAIJ+F,EACc,UAAlB3G,EAAM2G,QACJzG,IAAAC,cAAA,SACEmG,GAAItG,EAAMsG,GACV1F,KAAMZ,EAAMY,KACZgG,YAAa5G,EAAM4G,YACnBC,SAAUL,EACVM,OAAQJ,EACRpB,MAAOW,EAAWX,QAGpBpF,IAAAC,cAAA,YACEmG,GAAItG,EAAMsG,GACVS,KAAM/G,EAAM+G,MAAQ,EACpBF,SAAUL,EACVM,OAAQJ,EACRpB,MAAOW,EAAWX,QAIxB,OACEpF,IAAAC,cAAA,OACEC,UAAW,kBAAiB6F,EAAWT,SAAWS,EAAWF,WAC3D,0BAEF7F,IAAAC,cAAA,SAAO6G,QAAShH,EAAMsG,IAAKtG,EAAMiH,OAChCN,GACCV,EAAWT,SAAWS,EAAWF,WAAa7F,IAAAC,cAAA,SAAIH,EAAMkH,c,qDC/EhE,6CAEA,MAAMC,EAAcA,CAACtB,EAAOC,KAC1B,OAAQA,EAAOlF,MACb,IAAK,eACH,IAAIwG,GAAc,EAClB,IAAK,MAAMC,KAAWxB,EAAMyB,OACrBzB,EAAMyB,OAAOD,KAIhBD,EADEC,IAAYvB,EAAOuB,QACPD,GAAetB,EAAON,QAEtB4B,GAAevB,EAAMyB,OAAOD,GAAS7B,SAGvD,MAAO,IACFK,EACHyB,OAAQ,IACHzB,EAAMyB,OACT,CAACxB,EAAOuB,SAAU,CAAE/B,MAAOQ,EAAOR,MAAOE,QAASM,EAAON,UAE3DA,QAAS4B,GAEb,IAAK,WACH,MAAO,CACLE,OAAQxB,EAAOwB,OACf9B,QAASM,EAAOsB,aAEpB,QACE,OAAOvB,IAIA0B,EAAUA,CAACC,EAAeC,KACrC,MAAOC,EAAWxB,GAAYC,qBAAWgB,EAAa,CACpDG,OAAQE,EACRhC,QAASiC,IAoBX,MAAO,CAACC,EAjBatE,sBAAY,CAACkD,EAAIhB,EAAOE,KAC3CU,EAAS,CACPtF,KAAM,eACN0E,MAAOA,EACPE,QAASA,EACT6B,QAASf,KAEV,IAEiBlD,sBAAY,CAACuE,EAAWC,KAC1C1B,EAAS,CACPtF,KAAM,WACN0G,OAAQK,EACRP,YAAaQ,KAEd,O,gCCvDL,kCAkEeC,IA7DK7H,IAClB,MAAO8H,EAAMC,GAAWhF,sBACjBiF,EAAYC,GAAiBlF,sBAC7ByC,EAAS0C,GAAcnF,oBAAS,GAEjCoF,EAAgBjF,mBAEtB0B,oBAAU,KACR,IAAKkD,EACH,OAEF,MAAMM,EAAa,IAAIC,WACvBD,EAAWE,OAAS,KAClBL,EAAcG,EAAWG,SAE3BH,EAAWI,cAAcV,IACxB,CAACA,IAqBJ,OACE5H,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,SACEmG,GAAItG,EAAMsG,GACVmC,IAAKN,EACL1G,MAAO,CAAEiH,QAAS,QAClB9H,KAAK,OACL+H,OAAO,kBACP9B,SA3BgBjF,IACpB,IAAIgH,EACAC,EAAcrD,EACd5D,EAAM6E,OAAOqC,OAAuC,IAA9BlH,EAAM6E,OAAOqC,MAAMrF,QAC3CmF,EAAahH,EAAM6E,OAAOqC,MAAM,GAChCf,EAAQa,GACRV,GAAW,GACXW,GAAc,IAEdX,GAAW,GACXW,GAAc,GAEhB7I,EAAMuG,QAAQvG,EAAMsG,GAAIsC,EAAYC,MAiBlC3I,IAAAC,cAAA,OAAKC,UAAW,iBAAgBJ,EAAM+I,QAAU,WAC9C7I,IAAAC,cAAA,OAAKC,UAAU,yBACZ4H,GAAc9H,IAAAC,cAAA,OAAK6I,IAAKhB,EAAYiB,IAAI,aACvCjB,GAAc9H,IAAAC,cAAA,SAAG,0BAErBD,IAAAC,cAACJ,IAAM,CAACa,KAAK,SAASC,QAnBHqI,KACvBf,EAAcpE,QAAQoF,UAkB+B,gBAIjD3D,GAAWtF,IAAAC,cAAA,SAAIH,EAAMkH,c,0EC7D7B,gHAgHekC,UA/FEA,KACf,MAAMC,EAAOC,qBAAWC,MAClB,UAAE1G,EAAS,MAAExB,EAAK,WAAE2D,EAAU,YAAE7B,GAAgBP,eAC/C8E,EAAW8B,GAAgBjC,YAChC,CACEkC,MAAO,CACLnE,MAAO,GACPE,SAAS,GAEXkE,YAAa,CACXpE,MAAO,GACPE,SAAS,GAEXmE,QAAS,CACPrE,MAAO,GACPE,SAAS,GAEXoE,MAAO,CACLtE,MAAO,KACPE,SAAS,KAGb,GAGIqE,EAAUC,cA2BhB,OACE5J,IAAAC,cAACD,IAAMkC,SAAQ,KACblC,IAAAC,cAACY,IAAU,CAACM,MAAOA,EAAOH,QAAS8D,IAClCnC,GAAa3C,IAAAC,cAAC4J,IAAc,CAACC,WAAS,IACvC9J,IAAAC,cAAA,QAAMC,UAAU,aAAauB,SA7BN0B,UACzBzB,EAAMC,iBAEN,IACE,MAAMoI,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASzC,EAAUJ,OAAOmC,MAAMnE,OAChD2E,EAASE,OAAO,cAAezC,EAAUJ,OAAOoC,YAAYpE,OAC5D2E,EAASE,OAAO,UAAWzC,EAAUJ,OAAOqC,QAAQrE,OACpD2E,EAASE,OAAO,UAAWd,EAAKe,QAChCH,EAASE,OAAO,QAASzC,EAAUJ,OAAOsC,MAAMtE,aAE1CnC,EACJ,0DACA,OACA8G,EACA,CACEI,cAAe,UAAUhB,EAAKiB,QAKlCT,EAAQ7F,KAAK,KACb,MAAOW,OAQLzE,IAAAC,cAAC6F,IAAK,CACJM,GAAG,QACHK,QAAQ,QACR/F,KAAK,OACLqG,MAAM,QACN1B,WAAY,CAACN,eACbiC,UAAU,8BACVX,QAASiD,IAEXtJ,IAAAC,cAAC6F,IAAK,CACJM,GAAG,cACHK,QAAQ,WACRM,MAAM,cACN1B,WAAY,CAACL,YAAoB,IACjCgC,UAAU,4DACVX,QAASiD,IAEXtJ,IAAAC,cAAC6F,IAAK,CACJM,GAAG,UACHK,QAAQ,QACRM,MAAM,UACN1B,WAAY,CAACN,eACbiC,UAAU,gCACVX,QAASiD,IAEXtJ,IAAAC,cAAC0H,IAAW,CACVvB,GAAG,QACHC,QAASiD,EACTtC,UAAU,4BAEZhH,IAAAC,cAACJ,IAAM,CAACa,KAAK,SAASE,UAAW4G,EAAUlC,SAAS","file":"static/js/4.03b22c64.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\n\nimport Modal from \"./Modal\";\nimport Button from \"../FormElements/Button\";\n\nconst ErrorModal = (props) => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./PlaceForm.css\";\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, clearError, sendRequest } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n      address: {\n        value: \"\",\n        isValid: false,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", formState.inputs.title.value);\n      formData.append(\"description\", formState.inputs.description.value);\n      formData.append(\"address\", formState.inputs.address.value);\n      formData.append(\"creator\", auth.userId);\n      formData.append(\"image\", formState.inputs.image.value);\n\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places`,\n        \"POST\",\n        formData,\n        {\n          Authorization: `Bearer ${auth.token}`,\n        }\n      );\n\n      // Redirect the user to a diff page\n      history.push(\"/\");\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && <LoadingSpinner asOverlay />}\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an image\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n"],"sourceRoot":""}